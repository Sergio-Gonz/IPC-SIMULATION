version: "3.8"

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
    networks:
      - ipc-network

  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    environment:
      - NODE_ENV=production
      - SERVER_URL=http://server:3000
      - NUM_CLIENTS=5
      - MESSAGE_INTERVAL=1000
    depends_on:
      - server
    volumes:
      - ./logs:/app/logs
    networks:
      - ipc-network

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./src/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - ipc-network

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./src/monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - ipc-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  ipc-network:
    driver: bridge
